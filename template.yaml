AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Integradora

  Sample SAM Template for Integradora

Globals:
  Function:
    Timeout: 100
    MemorySize: 128

Resources:
  # Definición de la función Lambda para obtener categorías
  GetCategoriaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_categories/
      Handler: get_categories.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          DB_USER: !Ref DBUser
          DB_PASSWORD: !Ref DBPassword
          DB_NAME: !Ref DBName
          DB_HOST: !Ref DBHost
      Events:
        GetCategoria:
          Type: Api
          Properties:
            Path: /categoria
            Method: GET

  # Definición de la función Lambda para crear una categoría
  CreateCategoriaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_category/
      Handler: create_category.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          DB_USER: !Ref DBUser
          DB_PASSWORD: !Ref DBPassword
          DB_NAME: !Ref DBName
          DB_HOST: !Ref DBHost
      Events:
        CreateCategoria:
          Type: Api
          Properties:
            Path: /categoria
            Method: POST

  # Definición de la función Lambda para actualizar una categoría
  UpdateCategoriaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_category/
      Handler: update_category.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          DB_USER: !Ref DBUser
          DB_PASSWORD: !Ref DBPassword
          DB_NAME: !Ref DBName
          DB_HOST: !Ref DBHost
      Events:
        UpdateCategoria:
          Type: Api
          Properties:
            Path: /categoria
            Method: PUT


#*------------------------------------films---------------------------------
  # Definición de la función Lambda para obtener las peliculas
  GetFilmsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_films/
      Handler: get_films.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetFilms:
          Type: Api
          Properties:
            Path: /films
            Method: GET

  # Definición de la función Lambda para crear una pelicula
  CreateFilmFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_film/
      Handler: create_film.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        CreateFilm:
          Type: Api
          Properties:
            Path: /film
            Method: POST

  # Definición de la función Lambda para actualizar una pelicula
  UpdateFilmFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_film/
      Handler: update_film.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        UpdateFilm:
          Type: Api
          Properties:
            Path: /film
            Method: PUT

  # Definición de la función Lambda para eliminar una categoría
  DeleteFilmFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete_film/
      Handler: delete_film.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        DeleteFilm:
          Type: Api
          Properties:
            Path: /film/{film_id}  # Endpoint para eliminar una película
            Method: DELETE


  # Definición de la función Lambda para eliminar una categoría
  DeleteCategoriaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete_category/
      Handler: delete_category.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          DB_USER: !Ref DBUser
          DB_PASSWORD: !Ref DBPassword
          DB_NAME: !Ref DBName
          DB_HOST: !Ref DBHost
      Events:
        DeleteCategoria:
          Type: Api
          Properties:
            Path: /categoria
            Method: DELETE

Parameters:
  DBUser:
    Type: String
    Default: 'admin'
  DBPassword:
    Type: String
    Default: 'nhL5zPpY1I9w'
  DBName:
    Type: String
    Default: 'sispe'
  DBHost:
    Type: String
    Default: 'integradora-lambda.czc42euyq8iq.us-east-1.rds.amazonaws.com'

Outputs:
  GetCategoriaApi:
    Description: "API Gateway endpoint URL for Prod stage for GetCategoria function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categoria/"
  CreateCategoriaApi:
    Description: "API Gateway endpoint URL for Prod stage for CreateCategoria function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categoria/"
  UpdateCategoriaApi:
    Description: "API Gateway endpoint URL for Prod stage for UpdateCategoria function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categoria/"
  DeleteCategoriaApi:
    Description: "API Gateway endpoint URL for Prod stage for DeleteCategoria function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categoria/"
